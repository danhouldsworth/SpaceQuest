
    // piston
    function button_action2(){


        global.gravity=0;
        global.drag=0;
        global.friction_p=0;
        global.restitution_b=1;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1;
        global.distance_flag=0;
        global.distance_force=0.001;
        global.size=100;
        global.spin=0;


        for (var i=0; i<=5; i++){
            for (var j=10; j<canvas.height ; j+=canvas.height/9){
                particle.push(new particle_type(10+i*20,j,random_range(0,0.1),random_range(0,0.1),10));
                particle.push(new particle_type(canvas.width-i*10,j,-random_range(0,0.1),random_range(0,0.1),5));
                particle.push(new particle_type(canvas.width-i*10-20,j,-random_range(0,0.1),random_range(0,0.1),5));
                particle.push(new particle_type(canvas.width-i*10-40,j,-random_range(0,0.1),random_range(0,0.1),5));
                particle.push(new particle_type(canvas.width-i*10-60,j,-random_range(0,0.1),random_range(0,0.1),5));
                particle.push(new particle_type(canvas.width-i*10-80,j,-random_range(0,0.1),random_range(0,0.1),5));
                particle.push(new particle_type(canvas.width-i*10-100,j,-random_range(0,0.1),random_range(0,0.1),5));
            }
        }
        particle.push(new particle_type(canvas.width*.5,canvas.height/2,-0.5,0,100));
    }

    // piston #2 Rifle
    function button_action23(){


        global.gravity=0;
        global.drag=0;
        global.friction_p=0.025;
        global.restitution_b=1.05;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1.05;
        global.distance_flag=0;
        global.distance_force=0;
        global.size=100;
        global.spin=0;


        var gas_size=4;

        for (var i=gas_size; i<canvas.width*.15; i+=1.5*gas_size){
            for (var j=gas_size; j<canvas.height ; j+=1.5*gas_size){
                particle.push(new particle_type(i,j,random_range(0,2),random_range(0,2),gas_size));
                particle[particle.length-1].spin=1;
            }
        }
        particle.push(new particle_type(canvas.width*.25,canvas.height/2,0,0,99));
    }

    // piston #3 star core
    function button_action24(){


        global.gravity=0;
        global.drag=0;
        global.friction_p=1;
        global.restitution_b=0;
        global.friction_b=1;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=0;
        global.distance_flag=1;
        global.distance_force=0.0005;
        global.size=50;
        global.spin=0.5;


        var gas_size=5;

        for (var i=canvas.width*.25; i<canvas.width*.75; i+=2*gas_size){
            for (var j=0; j<canvas.height ; j+=2*gas_size){
                particle.push(new particle_type(i,j,random_range(0,0.1),random_range(0,0.1),gas_size));
            }
        }
        particle.push(new particle_type(canvas.width*.5,canvas.height/2,0,0,50));
        particle[particle.length-1].spin=0.25;

    }

    // piston #3 star core
    function button_action25(){


        global.gravity=0;
        global.drag=0;
        global.friction_p=1;
        global.restitution_b=1;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=0;
        global.distance_flag=0;
        global.distance_force=0;
        global.size=10;
        global.spin=0;


        var gas_size=3;

        for (var i=canvas.width*.25; i<canvas.width*.5; i+=2*gas_size){
            for (var j=canvas.height*.25; j<canvas.height*.75 ; j+=2*gas_size){
                particle.push(new particle_type(i,j,0,0,gas_size));
            }
        }
        particle.push(new particle_type(canvas.width*.1,canvas.height/2,5,0,10));

    }

    // hammer
    function button_action3(){

        global.friction_p=0.5;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=0;
        global.distance_flag=0;
        global.distance_force=0.000001;
        global.size=50;
        global.spin=0;


        for (var i=0; i<canvas.width/3; i+=4){
            for (var j=0; j<canvas.height*.2 ; j+=4){
                particle.push(new particle_type(canvas.width/2+i,j+canvas.height*.4,0,0,2));
            }
        }
        particle.push(new particle_type(canvas.width*0.35,canvas.height/2,0.5,0,50));
        particle[particle.length-1].spin=0;

    }

    // hammer #2
    function button_action26(){

        global.friction_p=1;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=1;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1.1;
        global.distance_flag=0;
        global.distance_force=0;
        global.size=80;
        global.spin=0;


        for (var i=0; i<canvas.width*.25; i+=7){
            for (var j=0; j<canvas.height ; j+=7){
                particle.push(new particle_type(canvas.width-i,j,0,0,3.5));
            }
        }
        particle.push(new particle_type(canvas.width*0.6,canvas.height/2,0.25,0,60));
    }

    // bullet
    function button_action4(){

        global.friction_p=1;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=0;
        global.distance_flag=0;
        global.distance_force=0.00001;
        global.size=5;
        global.spin=0;


        for (var i=0; i<canvas.width/5; i+=3){
            for (var j=0; j<canvas.height*.2 ; j+=3){
                particle.push(new particle_type(canvas.width*.5+i,j+canvas.height*.4,0,0,1.5));
            }
        }
        particle.push(new particle_type(canvas.width*0.25,canvas.height/2,3,0,5));
        particle[particle.length-1].spin=0;
    }

    // bullet #3
    function button_action27(){

        global.friction_p=1;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=0;
        global.distance_flag=0;
        global.distance_force=0.00001;
        global.size=5;
        global.spin=0;


        for (var i=0; i<canvas.width/5; i+=2){
            for (var j=0; j<canvas.height*.5 ; j+=2){
                particle.push(new particle_type(canvas.width*.5+i,j+canvas.height*.25,0,0,1));
            }
        }
        particle.push(new particle_type(canvas.width*0.5-20,canvas.height/2,2,0,5));
        particle[particle.length-1].spin=0.01;
    }

    // vortex #4
    function button_action29(){

        global.friction_p=1;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=3;
        global.restitution_p=1;
        global.distance_flag=0;
        global.distance_force=0.00001;
        global.size=5;
        global.spin=0;


        for (var i=0; i<canvas.width*.25; i+=5){
            for (var j=0; j<canvas.height*.25 ; j+=5){
                particle.push(new particle_type(canvas.width*.5+i+10,canvas.height*.5+j+2,-0.1,0,2));
                particle.push(new particle_type(canvas.width*.5-i-10,canvas.height*.5-j-1,0.1,0,2));
            }
        }
    }


    // explosive
    function button_action5(){

        global.friction_p=0;
        global.gravity=0;
        global.drag=-0.2;
        global.restitution_b=0;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1.25;
        global.distance_flag=1;
        global.distance_force=0.00001;
        global.size=2.5;
        global.spin=0;


        for (var i=0; i<100; i+=6){
            for (var j=0; j<100 ; j+=6){
                particle.push(new particle_type(canvas.width*0.1+i,canvas.height*.25+j,0,0,2.5));
            }
        }
    }

    // crystaline
    function button_action6(){

        global.friction_p=1;
        global.gravity=0;
        global.drag=-0.9;
        global.restitution_b=3;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=0.5;
        global.distance_flag=1;
        global.distance_force=0.0001;
        global.size=1;
        global.spin=0;


        recursive_triangle(canvas.width*.25,canvas.height*.25,30,0.4,-0.1,0.005);
        recursive_triangle(canvas.width*.5,canvas.height*.5,30,0,0,0.005);
        recursive_triangle(canvas.width*.75,canvas.height*.75,30,-0.4,0.1,0.005);
        recursive_triangle(canvas.width*.75,canvas.height*.25,30,0,0.2,0.005);
        recursive_triangle(canvas.width*.25,canvas.height*.75,30,0,-0.2,0.005);
    }

    function recursive_triangle(x,y,size,vx,vy,spin){
        if (particle.length<200){
            if (size>=1){
                particle.push(new particle_type(x,y,vx,vy,size));
                recursive_triangle_calc_next_gen(x,y,size,0,-size*4/3,1/3,vx,vy,spin);
                recursive_triangle_calc_next_gen(x,y,size,+size*2/Math.sqrt(3),+size/1.5,1/3,vx,vy,spin);
                recursive_triangle_calc_next_gen(x,y,size,-size*2/Math.sqrt(3),+size/1.5,1/3,vx,vy,spin);
            }
        }
    }

    function recursive_triangle_calc_next_gen(x,y,size,dx,dy,dsize,vx,vy,spin){
        recursive_triangle(x+dx,y+dy,size*dsize,vx-spin*dy,vy+spin*dx,spin);
    }

    // sinking solid #1
    function button_action7(){

        global.friction_p=1;
        global.gravity=-0.01;
        global.drag=-0.3;
        global.restitution_b=0;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=0;
        global.distance_flag=0;
        global.distance_force=0.0001;
        global.size=50;
        global.spin=1;


        for (i=10; i<canvas.width; i+=20){
            for (j=0; j<=80 ; j+=20){
                particle.push(new particle_type(i,j+10,0,0,10));
                particle.push(new particle_type(i+10,j+20,0,0,5));
            }
        }
        particle.push(new particle_type(canvas.width*0.5,canvas.height-50,0,0,50));
    }

    // sinking solid #2
    function button_action21(){

        global.friction_p=1;
        global.gravity=-0.01;
        global.drag=-0.3;
        global.restitution_b=0;
        global.friction_b=0.5;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=0;
        global.distance_flag=0;
        global.distance_force=0.0001;
        global.size=50;
        global.spin=1;


        for (i=10; i<canvas.width; i+=20){
            for (j=0; j<=80 ; j+=20){
                particle.push(new particle_type(i,j+10,0,0,10));
                particle.push(new particle_type(i+10,j+20,0,0,5));
            }
        }
        particle.push(new particle_type(canvas.width*0.5,canvas.height-50,1,0,50));
        particle[particle.length-1].spin=0.5;
    }

    // galaxy formation
    function button_action8(){

        global.friction_p=0;
        global.gravity=0;
        global.drag=-0.2;
        global.restitution_b=1;
        global.friction_b=0;
        global.boundary_flag_x=1;
        global.boundary_flag_y=1;
        global.contact_flag=0;
        global.restitution_p=1;
        global.distance_flag=1;
        global.distance_force=0.001;
        global.size=1;
        global.spin=0;


        while (particle.length<500){
            particle.push(new particle_type(random_range(0,canvas.width),random_range(0,canvas.height),random_range(-5,5),random_range(-5,5),random_range(0.5,2)));
        }

    }

    // Van de Graph
    function button_action9(){

        global.friction_p=0.5;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=0;
        global.friction_b=0.1;
        global.boundary_flag_x=1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1;
        global.distance_flag=1;
        global.distance_force=0.00002;
        global.size=200;
        global.spin=0;


        particle.push(new particle_type(canvas.width*.99,canvas.height*0.5,0,0,200));
        while (particle.length<75){
            particle.push(new particle_type(random_range(canvas.width*0,canvas.width*0.25),random_range(canvas.height*0,canvas.height*1),random_range(0,0),random_range(0,0),random_range(0.5,5)));
        }

    }

    // Tidal forces
    function button_action10(){

        global.friction_p=0;
        global.gravity=0;
        global.drag=-0.0002;
        global.restitution_b=0;
        global.friction_b=0;
        global.boundary_flag_x=1;
        global.boundary_flag_y=1;
        global.contact_flag=0;
        global.restitution_p=0;
        global.distance_flag=1;
        global.distance_force=0.000002;
        global.size=47;
        global.spin=0;


        particle.push(new particle_type(canvas.width*.5,canvas.height*0.5,0,0,47));
        for (var i=-10; i<10; i+=2){
            var width=Math.sqrt(100-i*i);
            for (var j=-width; j<width ; j+=2){
                particle.push(new particle_type(canvas.width*0.25+i,canvas.height*0.5+j,random_range(0.019,0.021),random_range(0.069,0.071),.5));
            }
        }

    }

    // 3 body problem
    function button_action22(){

        global.friction_p=0;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=0;
        global.friction_b=0;
        global.boundary_flag_x=1;
        global.boundary_flag_y=1;
        global.contact_flag=0;
        global.restitution_p=0;
        global.distance_flag=1;
        global.distance_force=0.001;
        global.size=47;
        global.spin=0;


        var body1=5;
        var body2=3;
        var body3=1;
        var total_mass=Math.pow(body1,3)+Math.pow(body2,3);
        var mass_ratio1=Math.pow(body1,3)/total_mass;
        var mass_ratio2=Math.pow(body2,3)/total_mass;

        particle.push(new particle_type(canvas.width*0.5-(mass_ratio2)*canvas.width*0.2,canvas.height*0.5,0,0.04*mass_ratio2,body1));
        particle.push(new particle_type(canvas.width*0.5+(mass_ratio1)*canvas.width*0.2,canvas.height*0.5,0,-0.04*mass_ratio1,body2));
        particle.push(new particle_type(canvas.width*0.5-(mass_ratio2)*canvas.width*0.3,canvas.height*0.5,0,.3*mass_ratio1,body3));

    }

    // Emergent vortex
    function button_action16(){

        global.friction_p=1;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=0;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=0;
        global.distance_flag=1;
        global.distance_force=0.001;
        global.size=3;
        global.spin=0;



        for (var theta=0; theta<(2*Math.PI); theta+=Math.PI/20){
            for (var r=30; r<=90 ; r+=30){
                var dx=r*Math.cos(theta);
                var offset_dx=0;
                var dy=r*Math.sin(theta);
                var offset_dy=0;
                particle.push(new particle_type(canvas.width*0.5+dx,canvas.height*0.5+dy,-dy*0.0044,dx*0.0044,3));
            }
        }

    }

    // Emergent vortex #2
    function button_action20(){

        global.friction_p=1;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=0;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=0;
        global.distance_flag=1;
        global.distance_force=0.001;
        global.size=3;
        global.spin=0.1;



        for (var theta=0; theta<(2*Math.PI); theta+=Math.PI/20){
            for (var r=30; r<=90 ; r+=30){
                var dx=r*Math.cos(theta);
                var offset_dx=0;
                var dy=r*Math.sin(theta);
                var offset_dy=0;
                particle.push(new particle_type(canvas.width*0.5+dx,canvas.height*0.5+dy,0,0,3));
                particle[particle.length-1].spin=0.1;
            }
        }

    }

    // Executive toy #1
    function button_action11(){

        global.friction_p=1;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1;
        global.distance_flag=0;
        global.distance_force=0.000001;
        global.size=30;
        global.spin=0;


        particle.push(new particle_type(canvas.width*0.5,canvas.height*0.5,0,0,30));
        particle.push(new particle_type(canvas.width*0.5+120,canvas.height*0.5,0,0,30));
        particle.push(new particle_type(canvas.width*0.5+60,canvas.height*0.5,0,0,30));
        particle.push(new particle_type(90,canvas.height*0.5,0.5,0,30));

    }

    // Executive toy #2
    function button_action12(){

        global.friction_p=1;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1;
        global.distance_flag=0;
        global.distance_force=0.000001;
        global.size=30;
        global.spin=0;


        particle.push(new particle_type(canvas.width*0.5,canvas.height*0.5,0,0,30));
        particle.push(new particle_type(canvas.width*0.5+120,canvas.height*0.5,0,0,30));
        particle.push(new particle_type(canvas.width*0.5+60,canvas.height*0.5,0,0,30));
        particle.push(new particle_type(30,canvas.height*0.5,0.5,0,30));
        particle.push(new particle_type(90,canvas.height*0.5,0.5,0,30));

    }

    // Executive toy #3
    function button_action13(){

        global.friction_p=1;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1;
        global.distance_flag=0;
        global.distance_force=0.000001;
        global.size=30;
        global.spin=0;


        particle.push(new particle_type(canvas.width*0.5+120,canvas.height*0.5,0,0,30));
        particle.push(new particle_type(canvas.width*0.5+60,canvas.height*0.5,0,0,30));
        particle.push(new particle_type(30,canvas.height*0.5,0.5,0,30));
        particle.push(new particle_type(90,canvas.height*0.5,0.5,0,30));
        particle.push(new particle_type(150,canvas.height*0.5,0.5,0,30));

    }

    // Bouncy ball paradox
    function button_action14(){

    global.friction_p=1;
    global.gravity=-0.001;
    global.drag=0;
    global.restitution_b=1;
    global.friction_b=0;
    global.boundary_flag_x=-1;
    global.boundary_flag_y=-1;
    global.contact_flag=1;
    global.restitution_p=1;
    global.distance_flag=0;
    global.distance_force=0.000001;
    global.size=15;
    global.spin=0;


    particle.push(new particle_type(canvas.width*0.5,canvas.height*0.25,0,0,25));
    particle.push(new particle_type(canvas.width*0.5,canvas.height*0.25+40,0,0,15));
    }

    // Billiards #1
    function button_action17(){

        global.friction_p=1;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=0.5;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1;
        global.distance_flag=0;
        global.distance_force=0;
        global.size=30;
        global.spin=0.1;


        particle.push(new particle_type(canvas.width*0.5,canvas.height*0.5,0,0,30));
        particle.push(new particle_type(canvas.width*0.5+120,canvas.height*0.5,0,0,30));
        particle.push(new particle_type(canvas.width*0.5+60,canvas.height*0.5,0,0,30));
        particle.push(new particle_type(90,canvas.height*0.5,0.5,0,30));
        particle[3].spin=0.1;
    }

    // Billiards #2
    function button_action18(){

        global.friction_p=1;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1;
        global.distance_flag=0;
        global.distance_force=0;
        global.size=30;
        global.spin=0.1;


        particle.push(new particle_type(canvas.width*0.5,canvas.height*0.5,0,0,30));
        particle.push(new particle_type(canvas.width*0.5+120,canvas.height*0.5,0,0,30));
        particle.push(new particle_type(canvas.width*0.5+60,canvas.height*0.5,0,0,30));
        particle.push(new particle_type(90,canvas.height*0.5,0.5,0,30));
        particle[1].spin=0.1;
    }

    // Billiards #3
    function button_action19(){

        global.friction_p=1;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1;
        global.distance_flag=0;
        global.distance_force=0;
        global.size=30;
        global.spin=0.1;


        particle.push(new particle_type(canvas.width*0.5,canvas.height*0.5,0,0,30));
        particle.push(new particle_type(canvas.width*0.5+60*Math.sqrt(3)/2,canvas.height*0.5+30,0,0,30));
        particle.push(new particle_type(canvas.width*0.5+60*Math.sqrt(3)/2,canvas.height*0.5-30,0,0,30));
        particle.push(new particle_type(canvas.width*0.5+120*Math.sqrt(3)/2,canvas.height*0.5-60,0,0,30));
        particle.push(new particle_type(canvas.width*0.5+120*Math.sqrt(3)/2,canvas.height*0.5+60,0,0,30));
        particle.push(new particle_type(canvas.width*0.5+120*Math.sqrt(3)/2,canvas.height*0.5,0,0,30));

        particle.push(new particle_type(30,canvas.height*0.5,0.5,0,30));
        particle[0].spin=-0.1;
    }

    // Coneveration ang mom
    function button_action28(){

        global.friction_p=0.1;
        global.gravity=0;
        global.drag=0;
        global.restitution_b=0;
        global.friction_b=0;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=0.5;
        global.distance_flag=1;
        global.distance_force=0.0001;
        global.size=20;
        global.spin=0.1;


        var ball_size=20;

        particle.push(new particle_type(canvas.width*0.5,canvas.height*0.5,0,0,ball_size));
        particle[particle.length-1].spin=-0.1;
        particle.push(new particle_type(canvas.width*0.5+2*ball_size*Math.sqrt(3)/2,canvas.height*0.5+ball_size,0,0,ball_size));
        particle[particle.length-1].spin=-0.1;
        particle.push(new particle_type(canvas.width*0.5+2*ball_size*Math.sqrt(3)/2,canvas.height*0.5-ball_size,0,0,ball_size));
        particle[particle.length-1].spin=-0.1;
        particle.push(new particle_type(canvas.width*0.5+4*ball_size*Math.sqrt(3)/2,canvas.height*0.5-2*ball_size,0,0,ball_size));
        particle[particle.length-1].spin=-0.1;
        particle.push(new particle_type(canvas.width*0.5+4*ball_size*Math.sqrt(3)/2,canvas.height*0.5+2*ball_size,0,0,ball_size));
        particle[particle.length-1].spin=-0.1;
        particle.push(new particle_type(canvas.width*0.5+4*ball_size*Math.sqrt(3)/2,canvas.height*0.5,0,0,ball_size));
        particle[particle.length-1].spin=-0.1;
    }

    // Rubber Net
    function button_action99(){

        global.friction_p=10;
        global.gravity=-0.001;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=1;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1;
        global.distance_flag=0;
        global.distance_force=0.000001;
        global.size=30;
        global.spin=0;


        attachment.push(new particle_type(canvas.width*0.5,0,0,0,5));
        attachment[0].magnet_number=0;
        attachment.push(new particle_type(canvas.width*0.5,canvas.height,0,0,5));
        attachment[1].magnet_number=0;

        var step=2;
        for (i=0; i<canvas.height; i+=2.5*step){
            magnet.push(new particle_type(canvas.width*0.5,i,0,0,step));
        }
        attachment[1].magnet_number=magnet.length-1;

        particle.push(new particle_type(100,20,0.4,0,20));
        particle[particle.length-1].spin=-0.15;
        particle.push(new particle_type(70,20,-0.1,0,20));
        particle[particle.length-1].spin=-0.08;
    }

    // Rubber hammock
    function button_action98(){

        global.friction_p=1;
        global.gravity=-0.001;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=10;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1;
        global.distance_flag=0;
        global.distance_force=0.000001;
        global.size=30;
        global.spin=0;


        attachment.push(new particle_type(0,canvas.height,0,0,5));
        attachment.push(new particle_type(canvas.width*0.75,canvas.height*0.25,0,0,5));

        var step=2;
        for (i=0; i<canvas.width*0.75; i+=2*step){
            magnet.push(new particle_type(i,canvas.height*(1-i/canvas.width),0,0,step));
        }

        attachment[0].magnet_number=0;
        attachment[1].magnet_number=magnet.length-1;

        particle.push(new particle_type(canvas.width*0.5,40,0.4,-0.5,20));
        particle[particle.length-1].spin=-0.1;
        particle.push(new particle_type(canvas.width-50,10,0.5,0,10));
        particle[particle.length-1].spin=-0.5;
    }

    // Trampoline
    function button_action97(){

        global.friction_p=1;
        global.gravity=-0.001;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=10;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1;
        global.distance_flag=0;
        global.distance_force=0.000001;
        global.size=30;
        global.spin=0;


        var step=2;

        attachment.push(new particle_type(canvas.width*0.25-step,canvas.height*0.75,0,0,5));
        attachment.push(new particle_type(canvas.width*0.75+step,canvas.height*0.75,0,0,5));

        for (i=canvas.width*0.25; i<canvas.width*0.75; i+=2.5*step){
            magnet.push(new particle_type(i,canvas.height*0.75,0,0,step));
        }
        attachment[0].magnet_number=0;
        attachment[1].magnet_number=magnet.length-1;

        particle.push(new particle_type(canvas.width*0.5,canvas.height,0,0,20));
    }

    // Catinery
    function button_action96(){

        global.friction_p=1;
        global.gravity=-0.005;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=10;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1;
        global.distance_flag=0;
        global.distance_force=0.000001;
        global.size=30;
        global.spin=0;


        var step=1;

        attachment.push(new particle_type(5,canvas.height*0.5,0,0,5));
        attachment.push(new particle_type(canvas.width*0.25,canvas.height*0.75,0,0,5));
        attachment.push(new particle_type(canvas.width*0.75,canvas.height*0.75,0,0,5));
        attachment.push(new particle_type(canvas.width-5,canvas.height*0.5,0,0,5));

        for (i=20; i<canvas.width-20; i+=1.5*step){
            magnet.push(new particle_type(i,canvas.height*0.6,0,0,step));
        }
        attachment[0].magnet_number=0;
        attachment[1].magnet_number=Math.round(magnet.length*0.3);
        attachment[2].magnet_number=Math.round(magnet.length*0.7);
        attachment[3].magnet_number=magnet.length-1;
    }

    // elastics
    function button_action95(){

        global.friction_p=1;
        global.gravity=-0;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=10;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1;
        global.distance_flag=0;
        global.distance_force=0.0001;
        global.size=30;
        global.spin=0;


        var step=1;

        attachment.push(new particle_type(30,canvas.height*0.5,0,0,10));
        attachment.push(new particle_type(canvas.width+step,canvas.height*0.5,0,0,5));
//      attachment.push(new particle_type(canvas.width*0.5+step,canvas.height*0.75,0,0,5));

        for (i=45; i<canvas.width; i+=2*step){
            magnet.push(new particle_type(i,canvas.height*0.5,0,0,step));
        }
        attachment[0].magnet_number=0;
        attachment[1].magnet_number=magnet.length-1;
        attachment[0].follow=0;

        particle.push(new particle_type(30,canvas.height*0.5,0,0.75,5));
        particle.push(new particle_type(30,canvas.height*0.7,0,0,30));
        particle.push(new particle_type(30,canvas.height*0.3,0,0,30));
    }

    // gravity wave
    function button_action94(){

        global.friction_p=1;
        global.gravity=-0.01;
        global.drag=0;
        global.restitution_b=1;
        global.friction_b=10;
        global.boundary_flag_x=-1;
        global.boundary_flag_y=-1;
        global.contact_flag=1;
        global.restitution_p=1;
        global.distance_flag=0;
        global.distance_force=0.0001;
        global.size=30;
        global.spin=0;


        var step=1;

        attachment.push(new particle_type(30,canvas.height*0.99,0,0,10));
        attachment.push(new particle_type(canvas.width+step,canvas.height*0.99,0,0,5));

        for (i=45; i<canvas.width; i+=3*step){
            magnet.push(new particle_type(i,canvas.height*0.99,0,0,step));
        }
        attachment[0].magnet_number=0;
        attachment[1].magnet_number=magnet.length-1;
        attachment[0].follow=0;

        particle.push(new particle_type(30,canvas.height,0,0,5));
    }


</script></head>

<body>

        > <input type="button" onclick="button_action11()" value="Classic executive toy">
         <input type="button" onclick="button_action12()" value="#2">
         <input type="button" onclick="button_action13()" value="#3"></br>
        >>> Conservation of angular momentum > <input type="button" onclick="button_action17()" value="Billiards">
         <input type="button" onclick="button_action18()" value="#2">
         <input type="button" onclick="button_action19()" value="#3">
        > <input type="button" onclick="button_action16()" value="Emergent vortex">
         <input type="button" onclick="button_action20()" value="#2">
         <input type="button" onclick="button_action28()" value="#3">
         <input type="button" onclick="button_action29()" value="#4"></br>
        >>> Deformation in solid ><input type="button" onclick="button_action3()" value="Hammer">
        <input type="button" onclick="button_action26()" value="#2">
        > <input type="button" onclick="button_action4()" value="Bullet">
        <input type="button" onclick="button_action25()" value="#2">
        <input type="button" onclick="button_action27()" value="#3">
        > <input type="button" onclick="button_action7()" value="Sinking weight">
        > <input type="button" onclick="button_action21()" value="Excavator"></br>
        >>> Pressure in gas > <input type="button" onclick="button_action2()" value="Piston bearing">
        > <input type="button" onclick="button_action23()" value="Rifle">
        > <input type="button" onclick="button_action24()" value="(Crude star core) accretion resisting collapse"></br>
        >>> Exothermic > <input type="button" onclick="button_action5()" value="Unstable lattice in cold container">
        >>> Endothermic > <input type="button" onclick="button_action6()" value="Viscous crystaline in hot container"></br>
        >>> Astrophysics > <input type="button" onclick="button_action22()" value="Classic 3 body problem">
        > <input type="button" onclick="button_action8()" value="Stella formation">
        > <input type="button" onclick="button_action10()" value="Oribital tidal forces"></br>
        >>> Electrostatics > <input type="button" onclick="button_action9()" value="Polystyrene chips on Van de Graph"></br>
        >>> Chains & Elastics > <input type="button" onclick="button_action97()" value="Trampoline">
         <input type="button" onclick="button_action99()" value="#2">
         <input type="button" onclick="button_action98()" value="#3">
        > <input type="button" onclick="button_action96()" value="Catenery">
        > <input type="button" onclick="button_action94()" value="Waves">
         <input type="button" onclick="button_action95()" value="#2">

</body></html>
